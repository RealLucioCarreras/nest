--- ../tests/tests/test_forms.py	2018-12-02 20:38:05.822494075 +0200
+++ ../tests/tests/test_forms.py	2018-12-02 20:38:26.462399400 +0200
@@ -50,94 +50,6 @@
     """Unit tests for pipeline.forms.PipelineFormMedia."""
 
     @pipeline_settings(PIPELINE_ENABLED=True)
-    def test_css_packages_with_pipeline_enabled(self):
-        """Testing PipelineFormMedia.css_packages with PIPELINE_ENABLED=True"""
-        class MyMedia(PipelineFormMedia):
-            css_packages = {
-                'all': ('styles1', 'styles2'),
-                'print': ('print',),
-            }
-
-            css = {
-                'all': ('extra1.css', 'extra2.css')
-            }
-
-        media = Media(MyMedia)
-
-        self.assertEqual(
-            MyMedia.css,
-            {
-                'all': [
-                    'extra1.css',
-                    'extra2.css',
-                    '/static/styles1.min.css',
-                    '/static/styles2.min.css',
-                ],
-                'print': ['/static/print.min.css'],
-            })
-        self.assertEqual(MyMedia.css, media._css)
-        self.assertEqual(
-            list(media.render_css()),
-            [
-                '<link href="%s" type="text/css" media="all" '
-                'rel="stylesheet" />' % path
-                for path in (
-                    '/static/extra1.css',
-                    '/static/extra2.css',
-                    '/static/styles1.min.css',
-                    '/static/styles2.min.css',
-                )
-            ] + [
-                '<link href="/static/print.min.css" type="text/css" '
-                'media="print" rel="stylesheet" />'
-            ])
-
-    @pipeline_settings(PIPELINE_ENABLED=False)
-    def test_css_packages_with_pipeline_disabled(self):
-        """Testing PipelineFormMedia.css_packages with PIPELINE_ENABLED=False"""
-        class MyMedia(PipelineFormMedia):
-            css_packages = {
-                'all': ('styles1', 'styles2'),
-                'print': ('print',),
-            }
-
-            css = {
-                'all': ('extra1.css', 'extra2.css')
-            }
-
-        media = Media(MyMedia)
-
-        self.assertEqual(
-            MyMedia.css,
-            {
-                'all': [
-                    'extra1.css',
-                    'extra2.css',
-                    'pipeline/css/first.css',
-                    'pipeline/css/second.css',
-                    'pipeline/css/unicode.css',
-                ],
-                'print': ['pipeline/css/urls.css'],
-            })
-        self.assertEqual(MyMedia.css, media._css)
-        self.assertEqual(
-            list(media.render_css()),
-            [
-                '<link href="%s" type="text/css" media="all" '
-                'rel="stylesheet" />' % path
-                for path in (
-                    '/static/extra1.css',
-                    '/static/extra2.css',
-                    '/static/pipeline/css/first.css',
-                    '/static/pipeline/css/second.css',
-                    '/static/pipeline/css/unicode.css',
-                )
-            ] + [
-                '<link href="/static/pipeline/css/urls.css" type="text/css" '
-                'media="print" rel="stylesheet" />'
-            ])
-
-    @pipeline_settings(PIPELINE_ENABLED=True)
     def test_js_packages_with_pipeline_enabled(self):
         """Testing PipelineFormMedia.js_packages with PIPELINE_ENABLED=True"""
         class MyMedia(PipelineFormMedia):
